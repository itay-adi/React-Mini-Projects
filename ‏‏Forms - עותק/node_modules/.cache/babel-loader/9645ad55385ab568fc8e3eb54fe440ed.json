{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D9\\u05EA\\u05D9 \\u05E2\\u05D3\\u05D9 \\u05D9\\u05D5\\u05E1\\u05E3\\\\\\u05E4\\u05D9\\u05EA\\u05D5\\u05D7\\\\Amdocs\\\\React- Tha Complete Guide\\\\React-Mini-Projects\\\\Forms\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [isNameTouched, setIsNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [isEmailTouched, setIsEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && isNameTouched; //const enteredEmailIsValid = enteredEmail.trim() !== '' ;\n  //const EmailInputIsInvalid = !enteredNameIsValid && isNameTouched;\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n  /*********************************************/\n\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  /*********************************************/\n\n\n  const nameBlurHandler = event => {\n    setIsNameTouched(true);\n  };\n\n  const emailBlurHandler = event => {\n    setIsEmailTouched(true);\n  };\n  /*********************************************/\n\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setIsNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    setEnteredName('');\n    setIsNameTouched(false);\n    setEnteredEmail('');\n    setIsEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your eMail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"DFdiXMNmh8LtlcUpGL/ROIp9Qoo=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/איתי עדי יוסף/פיתוח/Amdocs/React- Tha Complete Guide/React-Mini-Projects/Forms/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enteredName","setEnteredName","isNameTouched","setIsNameTouched","enteredEmail","setEnteredEmail","isEmailTouched","setIsEmailTouched","enteredNameIsValid","trim","nameInputIsInvalid","formIsValid","nameInputChangeHandler","event","target","value","emailInputChangeHandler","nameBlurHandler","emailBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n  const [isNameTouched, setIsNameTouched] = useState(false);\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [isEmailTouched, setIsEmailTouched] = useState(false);\n  \n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && isNameTouched;\n\n  //const enteredEmailIsValid = enteredEmail.trim() !== '' ;\n  //const EmailInputIsInvalid = !enteredNameIsValid && isNameTouched;\n\n  let formIsValid = false;\n\n  if(enteredNameIsValid){\n    formIsValid = true;\n  }\n\n  /*********************************************/\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  /*********************************************/\n\n  const nameBlurHandler = (event) => {\n    setIsNameTouched(true);\n  };\n\n  const emailBlurHandler = (event) => {\n    setIsEmailTouched(true);\n  };\n\n  /*********************************************/\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setIsNameTouched(true);\n\n    if(!enteredNameIsValid){\n      return;\n    }\n\n    console.log(enteredName)\n    setEnteredName('');\n    setIsNameTouched(false);\n\n    setEnteredEmail('');\n    setIsEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? \n                           'form-control invalid' : \n                           'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text' \n          id='name' \n          onChange={nameInputChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty</p>}\n      </div>\n\n      <div className={nameInputClasses}>\n        <label htmlFor='email'>Your eMail</label>\n        <input\n          type='email' \n          id='email' \n          onChange={emailInputChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {nameInputIsInvalid && <p className=\"error-text\">Please enter a valid email</p>}\n      </div>\n\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}