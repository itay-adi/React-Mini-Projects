{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D9\\u05EA\\u05D9 \\u05E2\\u05D3\\u05D9 \\u05D9\\u05D5\\u05E1\\u05E3\\\\\\u05E4\\u05D9\\u05EA\\u05D5\\u05D7\\\\Amdocs\\\\React- Tha Complete Guide\\\\React-Mini-Projects\\\\Forms\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(''); //const [isNameValid, setIsNameValid] = useState(false);\n\n  const [isNameTouched, setIsNameTouched] = useState(false);\n  const isNameValid = enteredName.trim() !== '';\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n\n    if (event.target.value.trim() !== '') {\n      setIsNameValid(true);\n      return;\n    }\n  };\n\n  const nameBlurHandler = event => {\n    setIsNameTouched(true);\n\n    if (enteredName.trim() === '') {\n      setIsNameValid(false);\n      return;\n    }\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setIsNameTouched(true);\n\n    if (enteredName.trim() === '') {\n      setIsNameValid(false);\n      return;\n    } else {\n      setIsNameValid(true);\n      console.log(enteredName);\n      setEnteredName('');\n    }\n  };\n\n  const nameInputIsInvalid = !isNameValid && isNameTouched;\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"0LPbHuyIH+nYQXQVG0LbHKTzXis=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/איתי עדי יוסף/פיתוח/Amdocs/React- Tha Complete Guide/React-Mini-Projects/Forms/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enteredName","setEnteredName","isNameTouched","setIsNameTouched","isNameValid","trim","nameInputChangeHandler","event","target","value","setIsNameValid","nameBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputIsInvalid","nameInputClasses"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C,CAD6B,CAE7B;;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAMO,WAAW,GAAGJ,WAAW,CAACK,IAAZ,OAAuB,EAA3C;;AAEA,QAAMC,sBAAsB,GAAIC,KAAD,IAAW;AACxCN,IAAAA,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;;AAEA,QAAGF,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBJ,IAAnB,OAA8B,EAAjC,EAAoC;AAClCK,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA;AACD;AACF,GAPD;;AASA,QAAMC,eAAe,GAAIJ,KAAD,IAAW;AACjCJ,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;;AAEA,QAAGH,WAAW,CAACK,IAAZ,OAAuB,EAA1B,EAA6B;AAC3BK,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA;AACD;AACF,GAPD;;AASA,QAAME,qBAAqB,GAAIL,KAAD,IAAW;AACvCA,IAAAA,KAAK,CAACM,cAAN;AAEAV,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;;AAEA,QAAGH,WAAW,CAACK,IAAZ,OAAuB,EAA1B,EAA6B;AAC3BK,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA;AACD,KAHD,MAKI;AACFA,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYf,WAAZ;AACAC,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GAfD;;AAiBA,QAAMe,kBAAkB,GAAG,CAACZ,WAAD,IAAgBF,aAA3C;AAEA,QAAMe,gBAAgB,GAAGD,kBAAkB,GAClB,sBADkB,GAElB,cAFzB;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEJ,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEK,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,QAAQ,EAAEX,sBAHZ;AAIE,QAAA,MAAM,EAAEK,eAJV;AAKE,QAAA,KAAK,EAAEX;AALT;AAAA;AAAA;AAAA;AAAA,cAFF,EASGgB,kBAAkB,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAlED;;GAAMlB,W;;KAAAA,W;AAoEN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n  //const [isNameValid, setIsNameValid] = useState(false);\n  const [isNameTouched, setIsNameTouched] = useState(false);\n\n  const isNameValid = enteredName.trim() !== '';\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n\n    if(event.target.value.trim() !== ''){\n      setIsNameValid(true);\n      return;\n    }\n  };\n\n  const nameBlurHandler = (event) => {\n    setIsNameTouched(true);\n\n    if(enteredName.trim() === ''){\n      setIsNameValid(false);\n      return;\n    }    \n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setIsNameTouched(true);\n\n    if(enteredName.trim() === ''){\n      setIsNameValid(false);\n      return;\n    }\n\n    else{\n      setIsNameValid(true);\n      console.log(enteredName)\n      setEnteredName('');\n    }\n  };\n\n  const nameInputIsInvalid = !isNameValid && isNameTouched;\n\n  const nameInputClasses = nameInputIsInvalid ? \n                           'form-control invalid' : \n                           'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text' \n          id='name' \n          onChange={nameInputChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}