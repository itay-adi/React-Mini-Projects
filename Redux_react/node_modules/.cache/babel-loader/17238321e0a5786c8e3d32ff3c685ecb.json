{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D9\\u05EA\\u05D9 \\u05E2\\u05D3\\u05D9 \\u05D9\\u05D5\\u05E1\\u05E3\\\\\\u05E4\\u05D9\\u05EA\\u05D5\\u05D7\\\\Amdocs\\\\React- Tha Complete Guide\\\\React-Mini-Projects\\\\Redux_react\\\\src\\\\components\\\\Counter.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux'; //If we use classes instead of functions\n\n/*import { Component } from 'react';\nimport { connect } from 'react-redux';*/\n\nimport { counterActions } from '../store/index';\nimport classes from './Counter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter);\n  const show = useSelector(state => state.showCounter);\n\n  const incrementHandler = () => {\n    //dispatch({ type: 'increment' } );\n    dispatch(counterActions.increment);\n  };\n\n  const increaseHandler = () => {\n    dispatch({\n      type: 'increase',\n      amount: 5\n    });\n  };\n\n  const decrementHandler = () => {\n    dispatch({\n      type: 'decrement'\n    });\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch({\n      type: 'toggle'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseHandler,\n        children: \"Increment By 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"a6W6bcAuHVADZPU2xn93xNQZltc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Counter;\nexport default Counter;\n/*class Counter extends Component{\n\n  incrementHandler(){\n    this.props.increment();\n  }\n\n  decrementHandler(){\n    this.props.decrement();\n  }\n\n  toggleCounterHandler(){\n\n  }\n\n  render(){\n    return(\n      <main className={classes.counter}>\n        <h1>Redux Counter</h1>\n        <div className={classes.value}>{this.props.counter}</div>\n        <div>\n          <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n          <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n        </div>\n        <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n      </main>\n    );\n  }\n}\n\n//function that maps redux state to props\nconst mapStateToProps = (state) => {\n  return ({ counter: state.counter });\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return ({\n    increment: () => dispatch({ type: 'increment'}),\n    decrement: () => dispatch({ type: 'decrement'})\n  });\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["C:/Users/איתי עדי יוסף/פיתוח/Amdocs/React- Tha Complete Guide/React-Mini-Projects/Redux_react/src/components/Counter.js"],"names":["useSelector","useDispatch","counterActions","classes","Counter","dispatch","counter","state","show","showCounter","incrementHandler","increment","increaseHandler","type","amount","decrementHandler","toggleCounterHandler","value"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA;AACA;;AAEA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,OAAO,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B;AACA,QAAME,IAAI,GAAGR,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACE,WAAhB,CAAxB;;AAEA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B;AACAL,IAAAA,QAAQ,CAACH,cAAc,CAACS,SAAhB,CAAR;AACD,GAHD;;AAKA,QAAMC,eAAe,GAAG,MAAM;AAC5BP,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,MAAM,EAAE;AAA5B,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BV,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMG,oBAAoB,GAAG,MAAM;AACjCX,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,SAAS,EAAEV,OAAO,CAACG,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,IAAI,iBAAI;AAAK,MAAA,SAAS,EAAEL,OAAO,CAACc,KAAxB;AAAA,gBAAgCX;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFX,eAGE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEI,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEE,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE;AAAQ,MAAA,OAAO,EAAEC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAlCD;;GAAMZ,O;UACaH,W,EACDD,W,EACHA,W;;;KAHTI,O;AAoCN,eAAeA,OAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\n\n//If we use classes instead of functions\n/*import { Component } from 'react';\nimport { connect } from 'react-redux';*/\n\nimport { counterActions } from '../store/index';\nimport classes from './Counter.module.css';\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter);\n  const show = useSelector(state => state.showCounter);\n\n  const incrementHandler = () => {\n    //dispatch({ type: 'increment' } );\n    dispatch(counterActions.increment);\n  };\n\n  const increaseHandler = () => {\n    dispatch({ type: 'increase', amount: 5});\n  };\n\n  const decrementHandler = () => {\n    dispatch({ type: 'decrement' });\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch({ type: 'toggle' });\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {show && <div className={classes.value}>{counter}</div>}\n      <div>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaseHandler}>Increment By 5</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n\n/*class Counter extends Component{\n\n  incrementHandler(){\n    this.props.increment();\n  }\n\n  decrementHandler(){\n    this.props.decrement();\n  }\n\n  toggleCounterHandler(){\n\n  }\n\n  render(){\n    return(\n      <main className={classes.counter}>\n        <h1>Redux Counter</h1>\n        <div className={classes.value}>{this.props.counter}</div>\n        <div>\n          <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n          <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n        </div>\n        <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n      </main>\n    );\n  }\n}\n\n//function that maps redux state to props\nconst mapStateToProps = (state) => {\n  return ({ counter: state.counter });\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return ({\n    increment: () => dispatch({ type: 'increment'}),\n    decrement: () => dispatch({ type: 'decrement'})\n  });\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);*/"]},"metadata":{},"sourceType":"module"}