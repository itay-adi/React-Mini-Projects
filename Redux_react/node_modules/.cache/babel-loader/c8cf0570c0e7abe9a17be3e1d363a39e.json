{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst slice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {//state.\n    },\n\n    toggleCounter(state) {}\n\n  }\n}); //Here we create the reducer function, params are defalut\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'toggle') {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n}; //Here we create a store\n\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["C:/Users/איתי עדי יוסף/פיתוח/Amdocs/React- Tha Complete Guide/React-Mini-Projects/Redux_react/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","showCounter","slice","name","reducers","increment","state","decrement","increase","action","toggleCounter","counterReducer","type","amount","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;AAEA,MAAMC,KAAK,GAAGJ,WAAW,CAAC;AACtBK,EAAAA,IAAI,EAAE,SADgB;AAEtBJ,EAAAA,YAFsB;AAGtBK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACN,OAAN;AACH,KAHK;;AAINO,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACN,OAAN;AACH,KANK;;AAONQ,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB,CACpB;AACH,KATK;;AAUNC,IAAAA,aAAa,CAACJ,KAAD,EAAQ,CAAE;;AAVjB;AAHY,CAAD,CAAzB,C,CAiBA;;AACA,MAAMK,cAAc,GAAG,CAACL,KAAK,GAAGP,YAAT,EAAuBU,MAAvB,KAAkC;AACrD,MAAGA,MAAM,CAACG,IAAP,KAAgB,WAAnB,EAA+B;AAC3B,WAAQ;AACJZ,MAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgB,CADrB;AAEJC,MAAAA,WAAW,EAAEK,KAAK,CAACL;AAFf,KAAR;AAIH;;AAED,MAAGQ,MAAM,CAACG,IAAP,KAAgB,UAAnB,EAA8B;AAC1B,WAAQ;AACJZ,MAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACI,MAD5B;AAEJZ,MAAAA,WAAW,EAAEK,KAAK,CAACL;AAFf,KAAR;AAIH;;AAED,MAAGQ,MAAM,CAACG,IAAP,KAAgB,WAAnB,EAA+B;AAC3B,WAAQ;AACJZ,MAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgB,CADrB;AAEJC,MAAAA,WAAW,EAAEK,KAAK,CAACL;AAFf,KAAR;AAIH;;AAED,MAAGQ,MAAM,CAACG,IAAP,KAAgB,QAAnB,EAA4B;AACxB,WAAQ;AACJZ,MAAAA,OAAO,EAAEM,KAAK,CAACN,OADX;AAEJC,MAAAA,WAAW,EAAE,CAACK,KAAK,CAACL;AAFhB,KAAR;AAIH;;AAED,SAAOK,KAAP;AACH,CA9BD,C,CAgCA;;;AACA,MAAMQ,KAAK,GAAGjB,WAAW,CAACc,cAAD,CAAzB;AAEA,eAAeG,KAAf","sourcesContent":["import { createStore } from 'redux';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = { counter: 0, showCounter: true };\r\n\r\nconst slice = createSlice({\r\n    name: 'counter',\r\n    initialState,\r\n    reducers: {\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n        increase(state, action) {\r\n            //state.\r\n        },\r\n        toggleCounter(state) {}\r\n    }\r\n});\r\n\r\n//Here we create the reducer function, params are defalut\r\nconst counterReducer = (state = initialState, action) => {\r\n    if(action.type === 'increment'){\r\n        return ({\r\n            counter: state.counter + 1,\r\n            showCounter: state.showCounter\r\n        });\r\n    }\r\n\r\n    if(action.type === 'increase'){\r\n        return ({\r\n            counter: state.counter + action.amount,\r\n            showCounter: state.showCounter\r\n        });\r\n    }\r\n\r\n    if(action.type === 'decrement'){\r\n        return ({\r\n            counter: state.counter - 1,\r\n            showCounter: state.showCounter\r\n        });\r\n    }\r\n\r\n    if(action.type === 'toggle'){\r\n        return ({\r\n            counter: state.counter,\r\n            showCounter: !state.showCounter\r\n        });\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\n//Here we create a store\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}