{"ast":null,"code":"//import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\n/****************************************************************/\n//Here we create a store. We create only one!\n\nconst store = configureStore({\n  //reducer here is a map of reducers\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;\n/****************************************************************/\n//Here we create the reducer function, params are defalut\n\n/*const counterReducer = (state = initialState, action) => {\r\n    if(action.type === 'increment'){\r\n        return ({\r\n            ...state,\r\n            counter: state.counter + 1,\r\n            //showCounter: state.showCounter\r\n        });\r\n    }\r\n\r\n    if(action.type === 'increase'){\r\n        return ({\r\n            ...state,\r\n            counter: state.counter + action.amount,\r\n            //showCounter: state.showCounter\r\n        });\r\n    }\r\n\r\n    if(action.type === 'decrement'){\r\n        return ({\r\n            ...state,\r\n            counter: state.counter - 1,\r\n            //showCounter: state.showCounter\r\n        });\r\n    }\r\n\r\n    if(action.type === 'toggle'){\r\n        return ({\r\n            ...state,\r\n            //counter: state.counter,\r\n            showCounter: !state.showCounter\r\n        });\r\n    }\r\n\r\n    return state;\r\n}*/\n//Here we create a store\n\n/*const store = createStore(counterReducer);\r\n\r\nexport default store;*/","map":{"version":3,"sources":["C:/Users/איתי עדי יוסף/פיתוח/Amdocs/React- Tha Complete Guide/React-Mini-Projects/Redux_react/src/store/index.js"],"names":["createSlice","configureStore","store","reducer","counter","counterSlice","auth","authSlice","counterActions","actions","authActions"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA;AAEA;;AACA,MAAMC,KAAK,GAAGD,cAAc,CAAC;AACzB;AACAE,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAEC,YAAY,CAACF,OADjB;AAELG,IAAAA,IAAI,EAAEC,SAAS,CAACJ;AAFX;AAFgB,CAAD,CAA5B;AAQA,OAAO,MAAMK,cAAc,GAAGH,YAAY,CAACI,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGH,SAAS,CAACE,OAA9B;AAEP,eAAeP,KAAf;AAEA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA","sourcesContent":["//import { createStore } from 'redux';\r\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\n/****************************************************************/\r\n\r\n//Here we create a store. We create only one!\r\nconst store = configureStore({\r\n    //reducer here is a map of reducers\r\n    reducer: { \r\n        counter: counterSlice.reducer,\r\n        auth: authSlice.reducer\r\n    }\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default store;\r\n\r\n/****************************************************************/\r\n\r\n//Here we create the reducer function, params are defalut\r\n/*const counterReducer = (state = initialState, action) => {\r\n    if(action.type === 'increment'){\r\n        return ({\r\n            ...state,\r\n            counter: state.counter + 1,\r\n            //showCounter: state.showCounter\r\n        });\r\n    }\r\n\r\n    if(action.type === 'increase'){\r\n        return ({\r\n            ...state,\r\n            counter: state.counter + action.amount,\r\n            //showCounter: state.showCounter\r\n        });\r\n    }\r\n\r\n    if(action.type === 'decrement'){\r\n        return ({\r\n            ...state,\r\n            counter: state.counter - 1,\r\n            //showCounter: state.showCounter\r\n        });\r\n    }\r\n\r\n    if(action.type === 'toggle'){\r\n        return ({\r\n            ...state,\r\n            //counter: state.counter,\r\n            showCounter: !state.showCounter\r\n        });\r\n    }\r\n\r\n    return state;\r\n}*/\r\n\r\n//Here we create a store\r\n/*const store = createStore(counterReducer);\r\n\r\nexport default store;*/"]},"metadata":{},"sourceType":"module"}