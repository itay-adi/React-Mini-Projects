{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05D9\\u05EA\\u05D9 \\u05E2\\u05D3\\u05D9 \\u05D9\\u05D5\\u05E1\\u05E3\\\\\\u05E4\\u05D9\\u05EA\\u05D5\\u05D7\\\\Amdocs\\\\React- Tha Complete Guide\\\\React-Mini-Projects\\\\Class Based\\\\src\\\\components\\\\UserFinder.js\";\nimport { Fragment, Component } from 'react';\nimport Users from './Users';\nimport classes from './UserFinder.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_USERS = [{\n  id: 'u1',\n  name: 'Max'\n}, {\n  id: 'u2',\n  name: 'Manuel'\n}, {\n  id: 'u3',\n  name: 'Julie'\n}];\n\nclass UserFinder extends Component {\n  constructor() {\n    super();\n    this.state = {\n      filteredUsers: [],\n      searchTerm: ''\n    };\n  }\n\n  componentDidMount() {\n    //Send HTTP request\n    this.setState({\n      filteredUsers: DUMMY_USERS\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      this.setState({\n        filteredUsers: DUMMY_USERS.filter(user => user.name.includes(this.state.searchTerm))\n      });\n    }\n  }\n\n  searchChangeHandler(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      className: classes.finder,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.finder,\n        type: \"search\",\n        onChange: this.searchChangeHandler.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        users: this.state.filteredUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n/*const UserFinder = () => {\r\n  const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    setFilteredUsers(\r\n      DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\r\n    );\r\n  }, [searchTerm]);\r\n\r\n  const searchChangeHandler = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <input type='search' onChange={searchChangeHandler} />\r\n      <Users users={filteredUsers} />\r\n    </Fragment>\r\n  );\r\n};*/\n\n\nexport default UserFinder;","map":{"version":3,"sources":["C:/Users/איתי עדי יוסף/פיתוח/Amdocs/React- Tha Complete Guide/React-Mini-Projects/Class Based/src/components/UserFinder.js"],"names":["Fragment","Component","Users","classes","DUMMY_USERS","id","name","UserFinder","constructor","state","filteredUsers","searchTerm","componentDidMount","setState","componentDidUpdate","prevProps","prevState","filter","user","includes","searchChangeHandler","event","target","value","render","finder","bind"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,MAAMC,WAAW,GAAG,CAChB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CADgB,EAEhB;AAAED,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CAFgB,EAGhB;AAAED,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,IAAI,EAAE;AAAlB,CAHgB,CAApB;;AAMA,MAAMC,UAAN,SAAyBN,SAAzB,CAAkC;AAC9BO,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE,EADN;AAETC,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf;AACA,SAAKC,QAAL,CACI;AAACH,MAAAA,aAAa,EAAEN;AAAhB,KADJ;AAGH;;AAEDU,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACpC,QAAGA,SAAS,CAACL,UAAV,KAAyB,KAAKF,KAAL,CAAWE,UAAvC,EAAkD;AAC9C,WAAKE,QAAL,CAAc;AACVH,QAAAA,aAAa,EAAEN,WAAW,CAACa,MAAZ,CAAoBC,IAAD,IAC9BA,IAAI,CAACZ,IAAL,CAAUa,QAAV,CAAmB,KAAKV,KAAL,CAAWE,UAA9B,CADW;AADL,OAAd;AAKH;AACJ;;AAEDS,EAAAA,mBAAmB,CAACC,KAAD,EAAO;AACtB,SAAKR,QAAL,CACI;AAACF,MAAAA,UAAU,EAAEU,KAAK,CAACC,MAAN,CAAaC;AAA1B,KADJ;AAGH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBACI,QAAC,QAAD;AAAU,MAAA,SAAS,EAAErB,OAAO,CAACsB,MAA7B;AAAA,8BACE;AAAO,QAAA,SAAS,EAAEtB,OAAO,CAACsB,MAA1B;AAAkC,QAAA,IAAI,EAAC,QAAvC;AAAgD,QAAA,QAAQ,EAAE,KAAKL,mBAAL,CAAyBM,IAAzB,CAA8B,IAA9B;AAA1D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAvC6B;AA0ClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeH,UAAf","sourcesContent":["import { Fragment, Component } from 'react';\r\n\r\nimport Users from './Users';\r\nimport classes from './UserFinder.module.css';\r\n\r\nconst DUMMY_USERS = [\r\n    { id: 'u1', name: 'Max'},\r\n    { id: 'u2', name: 'Manuel'},\r\n    { id: 'u3', name: 'Julie'},\r\n];\r\n\r\nclass UserFinder extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            filteredUsers: [],\r\n            searchTerm: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        //Send HTTP request\r\n        this.setState(\r\n            {filteredUsers: DUMMY_USERS}\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevState.searchTerm !== this.state.searchTerm){\r\n            this.setState({\r\n                filteredUsers: DUMMY_USERS.filter((user) => \r\n                    user.name.includes(this.state.searchTerm)\r\n                ),\r\n            });\r\n        }\r\n    }\r\n\r\n    searchChangeHandler(event){\r\n        this.setState(\r\n            {searchTerm: event.target.value}\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Fragment className={classes.finder}>\r\n              <input className={classes.finder} type='search' onChange={this.searchChangeHandler.bind(this)} />\r\n              <Users users={this.state.filteredUsers} />\r\n            </Fragment>\r\n          );\r\n    }\r\n}\r\n\r\n/*const UserFinder = () => {\r\n  const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    setFilteredUsers(\r\n      DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\r\n    );\r\n  }, [searchTerm]);\r\n\r\n  const searchChangeHandler = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <input type='search' onChange={searchChangeHandler} />\r\n      <Users users={filteredUsers} />\r\n    </Fragment>\r\n  );\r\n};*/\r\n\r\nexport default UserFinder;"]},"metadata":{},"sourceType":"module"}